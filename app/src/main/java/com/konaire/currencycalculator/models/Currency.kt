package com.konaire.currencycalculator.models

import android.content.Context

import com.konaire.currencycalculator.R
import com.konaire.currencycalculator.ui.list.ListItemType
import com.konaire.currencycalculator.ui.list.ViewType

/**
 * Created by Evgeny Eliseyev on 24/04/2018.
 */
enum class CurrencyInfo(
    val descriptionRes: Int = 0,
    val flag: String = ""
) {
    AUD(R.string.currency_description_aud, "ðŸ‡¦ðŸ‡º"),
    BGN(R.string.currency_description_bgn, "ðŸ‡§ðŸ‡¬"),
    BRL(R.string.currency_description_brl, "ðŸ‡§ðŸ‡·"),
    CAD(R.string.currency_description_cad, "ðŸ‡¨ðŸ‡¦"),
    CHF(R.string.currency_description_chf, "ðŸ‡¨ðŸ‡­"),
    CNY(R.string.currency_description_cny, "ðŸ‡¨ðŸ‡³"),
    CZK(R.string.currency_description_czk, "ðŸ‡¨ðŸ‡¿"),
    DKK(R.string.currency_description_dkk, "ðŸ‡©ðŸ‡°"),
    EUR(R.string.currency_description_eur, "ðŸ‡ªðŸ‡º"),
    GBP(R.string.currency_description_gbp, "ðŸ‡¬ðŸ‡§"),
    HKD(R.string.currency_description_hkd, "ðŸ‡­ðŸ‡°"),
    HRK(R.string.currency_description_hrk, "ðŸ‡­ðŸ‡·"),
    HUF(R.string.currency_description_huf, "ðŸ‡­ðŸ‡º"),
    IDR(R.string.currency_description_idr, "ðŸ‡®ðŸ‡©"),
    ILS(R.string.currency_description_ils, "ðŸ‡®ðŸ‡±"),
    INR(R.string.currency_description_inr, "ðŸ‡®ðŸ‡³"),
    ISK(R.string.currency_description_isk, "ðŸ‡®ðŸ‡¸"),
    JPY(R.string.currency_description_jpy, "ðŸ‡¯ðŸ‡µ"),
    KRW(R.string.currency_description_krw, "ðŸ‡°ðŸ‡·"),
    MXN(R.string.currency_description_mxn, "ðŸ‡²ðŸ‡½"),
    MYR(R.string.currency_description_myr, "ðŸ‡²ðŸ‡¾"),
    NOK(R.string.currency_description_nok, "ðŸ‡³ðŸ‡´"),
    NZD(R.string.currency_description_nzd, "ðŸ‡³ðŸ‡¿"),
    PHP(R.string.currency_description_php, "ðŸ‡µðŸ‡­"),
    PLN(R.string.currency_description_pln, "ðŸ‡µðŸ‡±"),
    RON(R.string.currency_description_ron, "ðŸ‡·ðŸ‡´"),
    RUB(R.string.currency_description_rub, "ðŸ‡·ðŸ‡º"),
    SEK(R.string.currency_description_sek, "ðŸ‡¸ðŸ‡ª"),
    SGD(R.string.currency_description_sgd, "ðŸ‡¸ðŸ‡¬"),
    THB(R.string.currency_description_thb, "ðŸ‡¹ðŸ‡­"),
    TRY(R.string.currency_description_try, "ðŸ‡¹ðŸ‡·"),
    USD(R.string.currency_description_usd, "ðŸ‡ºðŸ‡¸"),
    ZAR(R.string.currency_description_zar, "ðŸ‡¿ðŸ‡¦"),
    UNKNOWN(R.string.currency_description_unknown, "ðŸ¤”");
}

data class Currency(
    val name: String = "",
    var rate: Float = 1F,
    var value: Float = -1F
): ViewType {
    private val currencyInfo: CurrencyInfo
        get() = try {
            CurrencyInfo.valueOf(name)
        } catch (e: Exception) {
            CurrencyInfo.UNKNOWN
        }

    fun getFlag(): String = currencyInfo.flag

    fun getDescription(context: Context): String = context.getString(currencyInfo.descriptionRes)

    fun calculateValue(context: Context, baseCurrency: Currency): String = if (baseCurrency.value >= 0) {
        context.getString(
            R.string.currency_value_format,
            rate * baseCurrency.value / baseCurrency.rate
        )
    } else {
        ""
    }

    override fun getViewType(): Int = ListItemType.CURRENCY.ordinal
}

data class CurrencyResponse(
    val base: Currency = Currency(),
    val currencies: MutableList<Currency> = ArrayList()
)